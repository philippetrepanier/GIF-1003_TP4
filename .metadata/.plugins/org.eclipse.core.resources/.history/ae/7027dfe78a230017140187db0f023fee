#include "ajouterentraineur.h"
#include <QMessageBox>

ajouterEntraineur::ajouterEntraineur(QWidget *parent) :
		QDialog(parent)
{
	ui.setupUi(this);
	QString masculin = "Masculin";
	QString feminin = "Feminin";
	ui.sexeComboBox->addItem(masculin);
	ui.sexeComboBox->addItem(feminin);

	QObject::connect(ui.OKpushButton, SIGNAL(clicked()), this, SLOT(validerFormulaire()));

}

ajouterEntraineur::~ajouterEntraineur()
{

}

void ajouterEntraineur::validerFormulaire()
{
	//Nom
	if (ui.nomlineEdit->text().isEmpty())
	{
		QString message("Le nom ne doit pas être vide");
		QMessageBox::information(this, "Erreur!", message);
		return;
	}
	if (util::validerFormatNom(ui.nomlineEdit->text().toStdString()))
	{
		QString message("Le format du nom n'est pas valide");
		QMessageBox::information(this, "Erreur!", message);
		return;
	}

	//Prenom
	if (ui.prenomlineEdit->text().isEmpty())
	{
		QString message("Le prenom ne doit pas être vide");
		QMessageBox::information(this, "Erreur!", message);
		return;
	}
	if (util::validerFormatNom(ui.prenomlineEdit->text().toStdString()))
	{
		QString message("Le format du prenom n'est pas valide");
		QMessageBox::information(this, "Erreur!", message);
		return;
	}

	//Telephone
	if (ui.telephonelineEdit->text().isEmpty())
	{
		QString message("Le numéro de telephone ne doit pas être vide");
		QMessageBox::information(this, "Erreur!", message);
		return;
	}
	if (util::validerTelephone(ui.telephonelineEdit->text().toStdString()))
	{
		QString message("Le format du numéra de téléphone n'est pas valide");
		QMessageBox::information(this, "Erreur!", message);
		return;
	}

//	bool validerNumRAMQ(const std::string& p_numero, const std::string& p_nom, const std::string& p_prenom,
//			int p_jourNaissance, int p_moisNaissance, int p_anneeNaissance, char p_sex);

//RAMQ
	if (ui.ramqlineEdit->text().isEmpty())
	{
		QString message("Le numéro de RAMQ ne doit pas être vide");
		QMessageBox::information(this, "Erreur!", message);
		return;
	}
	if (util::validerNumRAMQ(ui.ramqlineEdit->text().toStdString(),ui.nomlineEdit->text().toStdString(),ui.prenomlineEdit->text().toStdString(),reqJour(),reqMois(),reqAnnee(), reqSexe())
			{
				QString message("Le format du numéra de RAMQ n'est pas valide");
				QMessageBox::information(this, "Erreur!", message);
				return;
			}

			//Telephone

			else
			{
				accept();
			}
		}

//Accesseur pour les attributs
		QString ajouterEntraineur::reqNom() const
		{
			return (ui.nomlineEdit->text());
		}
		QString ajouterEntraineur::reqPrenom() const
		{
			return (ui.prenomlineEdit->text());
		}
		QString ajouterEntraineur::reqTelephone() const
		{
			return (ui.telephonelineEdit->text());
		}
		QString ajouterEntraineur::reqNumRamq() const
		{
			return (ui.ramqlineEdit->text());
		}
		char ajouterEntraineur::reqSexe() const
		{
			if (ui.sexeComboBox->currentText().toStdString() == "Masculin")
			{
				return 'M';
			}
			else if (ui.sexeComboBox->currentText().toStdString() == "Feminin")
			{
				return 'F';
			}
			return 1;
		}
		int ajouterEntraineur::reqJour() const
		{
			return (ui.jourspinBox->value());
		}
		int ajouterEntraineur::reqMois() const
		{
			return (ui.moisspinBox->value());
		}

		int ajouterEntraineur::reqAnnee() const
		{
			return (ui.anneespinBox->value());
		}
